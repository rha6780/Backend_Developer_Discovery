name: Image Build

on: workflow_dispatch

env:
  USER: github-action
  AWS_REGION: ap-northeast-2
  ECR_REPOSITORY: developer_discovery_repository
  IMAGE_TAG: latest

jobs:
  build_image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Configure AWS credential
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: 'Create env file'
        run: |
          mkdir .envs
          touch .envs/.prod
          echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .prod
          echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .prod
          echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .prod
          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .prod
          echo POSTGRES_HOST=${{ secrets.POSTGRES_HOST }} >> .prod
          echo POSTGRES_PORT=5432 >> .prod
          echo EMAIL_HOST=${{ secrets.EMAIL_HOST }} >> .prod
          echo EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }} >> .prod
          echo EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }} >> .prod
          cat .prod

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build -f Dockerfile.prod -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"


